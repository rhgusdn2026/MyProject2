<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	 1) XML (필요한 데이터를 문서로 저장) : Document,HTML(View)
	 	=> 문서형 데이터 베이스
	 	=> 운영체제의 호환성이 좋다
	 	=> 모든 프로그램언어에서 같은 내용을 출력할 수 있다.
	 	=> XML
	 	   - XML 구조 (XML)
	 	   - 문서 제작하는 방법 (DTD,XSD)
	 	   - 변환 (XSLT) : html,pdf
	 	   - 언어(JAVA)에서 활용 : DOM,SAX(*****) : XML Parser
	 	   					  === ===
	 	   					 DOM : 메모리에 저장한 상태
	 	   					 SAX : 한줄씩 읽어서 데이터 가지고 온다(속도가빠르다 mybatis , spring 사용)
	 	1. 구분이 되어 있다 (반정형화 데이터)
	 	   XML : 필요한 데이터 저장시에 <a>()</a> <a href="">
	 			    태그 사이,속성
	 	   ML : 태그와 속성으로 만들어 진다
	 	                태그 : 여는 태그 <a> , 닫는 태그 </a> , 
	 	              Empty태그 (단독태그)  <input/>
	 	2. XML : 태그는 지정된 것이 없다 (사용자 정의) => 시멘텍으로 제작
	 				예) <f> <file_name> <<알아보기쉽게 시멘텍태그라고함
	 		1) XML 문법
	 			= 태그를 만들 경우
	 			  - 알파벳 , 한글을 사용한다(알파벳은 대소문자를 구분한다)
	 			  	HTML : <A>=<a> , XML : <A>!=<a>
	 			  	JAVA : int A; int a;
	 			  - 숫자를 사용할 수 있다 : 단 앞에 사용 금지
	 			  	<2aaa>(X) => <a2> <a3>(O)
	 			  - 특수문자 사용이 가능 : (_) , (-) , . , $ , :
	 			  	<c:forEach> <file_name> <file.size>
	 			  - 키워드(예약어)는 사용할 수 없다 => xml
	 			  - 반드시 최상의 태그는 1개만 존재
	 			    = 계층구조 : 전체 루트 태그
	 			    = 열고 닫는 태그가 반드시 일치 (순서)
	 			      <a><b><c></c></b></a>
	 			  - 속성은 값을 지정할 때 반드시 "",''
	 			  	<table width=300> (X) HTML(O)
	 			  	<table width="300"> (O) HTML(O)
 -->
<sawon> <!-- table명 -->
	<list> <!-- Row (Record) -->
		<sabun>1</sabun> <!-- Column -->
		<name>홍길동</name>
		<dept>개발부</dept>
		<sex>남자</sex>
		<age>26</age>
	</list>
	<list>
		<sabun>2</sabun>
		<name>심청이</name>
		<dept>개발부</dept>
		<sex>여자</sex>
		<age>26</age>
	</list>
	<list>
		<sabun>3</sabun>
		<name>박문수</name>
		<dept>개발부</dept>
		<sex>남자</sex>
		<age>27</age>
	</list>
</sawon>
 
 
 
 
 
 
 
 
 